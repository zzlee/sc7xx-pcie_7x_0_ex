#*****************************************************************************************
# Vivado (TM) v2024.2 (64-bit)
#
# pcie_7x_0_ex.tcl: Tcl script for re-creating project 'pcie_7x_0_ex'
#
# Generated by Vivado on Thu Sep 11 13:28:06 CST 2025
# IP Build 5239520 on Sun Nov 10 16:12:51 MST 2024
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (pcie_7x_0_ex.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_reg.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/zzlab_env_ctrl.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/err_mask.vh"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_wr.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_wr_ctrl.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/ip/fifo_xdma_desc/fifo_xdma_desc.xci"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_xdma_desc_rd.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/axis_src.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_ctrl.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/axis_sink.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_rc_fifo.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/fifo_fwft2.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_burst.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/pcie_turnoff.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/pcie_intr_ctrl.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/priority_encoder.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/pcie_intr.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_cq.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_rc_desc.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_rc_grp.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_muxer.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/pcie_7x_0_pipe_clock.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/pcie_7x_0_support.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/pcie_app_7x.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/xilinx_pcie_2_1_ep_7x.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/axis_broadcast.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/axis_split_2.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/ip/fifo_dma_wr/fifo_dma_wr.xci"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/v_axis_cvt_2_ctrl.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/color_format.vh"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/v_axis_cvt_2.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/fifo_fwft.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/axis_fifo.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/EP_MEM.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/PIO.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/PIO_EP.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/PIO_EP_MEM_ACCESS.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/PIO_RX_ENGINE.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/PIO_TO_CTRL.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/PIO_TX_ENGINE.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.gen/sources_1/bd/pcie_bd/hdl/pcie_bd_wrapper.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/hierarchy.txt"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/ip/pcie_7x_0/pcie_7x_0.xci"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/ip/fifo_dma_rd/fifo_dma_rd.xci"
#    "/home/zzlee/pcie_7x_0_ex/imports/xilinx_pcie_7x_ep_x4g2.xdc"
#    "/home/zzlee/pcie_7x_0_ex/imports/board_common.vh"
#    "/home/zzlee/pcie_7x_0_ex/imports/pci_exp_usrapp_cfg.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/pci_exp_expect_tasks.vh"
#    "/home/zzlee/pcie_7x_0_ex/imports/pci_exp_usrapp_com.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/pci_exp_usrapp_pl.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/pci_exp_usrapp_rx.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/sample_tests1.vh"
#    "/home/zzlee/pcie_7x_0_ex/imports/tests.vh"
#    "/home/zzlee/pcie_7x_0_ex/imports/pci_exp_usrapp_tx.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/pcie_2_1_rport_7x.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/pcie_axi_trn_bridge.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/sys_clk_gen.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/sys_clk_gen_ds.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/xilinx_pcie_2_1_rport_7x.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/board.v"
#    "/home/zzlee/pcie_7x_0_ex/imports/xil_sig2pipe.v"
#    "/home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/utils_1/imports/synth_1/xilinx_pcie_2_1_ep_7x.dcp"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_reg.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/zzlab_env_ctrl.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/err_mask.vh"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_wr.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_wr_ctrl.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/ip/fifo_xdma_desc/fifo_xdma_desc.xci"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_xdma_desc_rd.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/axis_src.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_ctrl.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/axis_sink.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_rc_fifo.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/fifo_fwft2.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_burst.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/pcie_turnoff.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/pcie_intr_ctrl.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/priority_encoder.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/pcie_intr.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_cq.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_rc_desc.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_rc_grp.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/tlp_muxer.v"]"\
 "[file normalize "$origin_dir/imports/pcie_7x_0_pipe_clock.v"]"\
 "[file normalize "$origin_dir/imports/pcie_7x_0_support.v"]"\
 "[file normalize "$origin_dir/imports/pcie_app_7x.v"]"\
 "[file normalize "$origin_dir/imports/xilinx_pcie_2_1_ep_7x.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/axis_broadcast.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/axis_split_2.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/ip/fifo_dma_wr/fifo_dma_wr.xci"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/v_axis_cvt_2_ctrl.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/color_format.vh"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/v_axis_cvt_2.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/fifo_fwft.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/new/axis_fifo.v"]"\
 "[file normalize "$origin_dir/imports/EP_MEM.v"]"\
 "[file normalize "$origin_dir/imports/PIO.v"]"\
 "[file normalize "$origin_dir/imports/PIO_EP.v"]"\
 "[file normalize "$origin_dir/imports/PIO_EP_MEM_ACCESS.v"]"\
 "[file normalize "$origin_dir/imports/PIO_RX_ENGINE.v"]"\
 "[file normalize "$origin_dir/imports/PIO_TO_CTRL.v"]"\
 "[file normalize "$origin_dir/imports/PIO_TX_ENGINE.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.gen/sources_1/bd/pcie_bd/hdl/pcie_bd_wrapper.v"]"\
 "[file normalize "$origin_dir/imports/hierarchy.txt"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/ip/pcie_7x_0/pcie_7x_0.xci"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/sources_1/ip/fifo_dma_rd/fifo_dma_rd.xci"]"\
 "[file normalize "$origin_dir/imports/xilinx_pcie_7x_ep_x4g2.xdc"]"\
 "[file normalize "$origin_dir/imports/board_common.vh"]"\
 "[file normalize "$origin_dir/imports/pci_exp_usrapp_cfg.v"]"\
 "[file normalize "$origin_dir/imports/pci_exp_expect_tasks.vh"]"\
 "[file normalize "$origin_dir/imports/pci_exp_usrapp_com.v"]"\
 "[file normalize "$origin_dir/imports/pci_exp_usrapp_pl.v"]"\
 "[file normalize "$origin_dir/imports/pci_exp_usrapp_rx.v"]"\
 "[file normalize "$origin_dir/imports/sample_tests1.vh"]"\
 "[file normalize "$origin_dir/imports/tests.vh"]"\
 "[file normalize "$origin_dir/imports/pci_exp_usrapp_tx.v"]"\
 "[file normalize "$origin_dir/imports/pcie_2_1_rport_7x.v"]"\
 "[file normalize "$origin_dir/imports/pcie_axi_trn_bridge.v"]"\
 "[file normalize "$origin_dir/imports/sys_clk_gen.v"]"\
 "[file normalize "$origin_dir/imports/sys_clk_gen_ds.v"]"\
 "[file normalize "$origin_dir/imports/xilinx_pcie_2_1_rport_7x.v"]"\
 "[file normalize "$origin_dir/imports/board.v"]"\
 "[file normalize "$origin_dir/imports/xil_sig2pipe.v"]"\
 "[file normalize "$origin_dir/pcie_7x_0_ex.srcs/utils_1/imports/synth_1/xilinx_pcie_2_1_ep_7x.dcp"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set paths [list \
 "[file normalize "$origin_dir/../vitis_hls-dev"]"]"\
 "[file normalize "$origin_dir/../vitis_hls-dev"]"]"\
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "pcie_7x_0_ex"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "pcie_7x_0_ex.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a50tcsg325-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
set_property -name "corecontainer.enable" -value "1" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_core_container" -value "1" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "use_inline_hdl_ip" -value "1" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "36" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "36" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "36" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "36" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "36" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "1" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/../vitis_hls-dev"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_reg.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/zzlab_env_ctrl.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/err_mask.vh" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_wr.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_wr_ctrl.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/ip/fifo_xdma_desc/fifo_xdma_desc.xci" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_xdma_desc_rd.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/axis_src.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_ctrl.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/axis_sink.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_rc_fifo.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/fifo_fwft2.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_burst.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/pcie_turnoff.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/pcie_intr_ctrl.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/priority_encoder.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/pcie_intr.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_cq.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_rc_desc.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_rc_grp.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/tlp_muxer.v" ]\
 [file normalize "${origin_dir}/imports/pcie_7x_0_pipe_clock.v" ]\
 [file normalize "${origin_dir}/imports/pcie_7x_0_support.v" ]\
 [file normalize "${origin_dir}/imports/pcie_app_7x.v" ]\
 [file normalize "${origin_dir}/imports/xilinx_pcie_2_1_ep_7x.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/axis_broadcast.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/axis_split_2.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/ip/fifo_dma_wr/fifo_dma_wr.xci" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/v_axis_cvt_2_ctrl.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/color_format.vh" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/v_axis_cvt_2.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/fifo_fwft.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/new/axis_fifo.v" ]\
 [file normalize "${origin_dir}/imports/EP_MEM.v" ]\
 [file normalize "${origin_dir}/imports/PIO.v" ]\
 [file normalize "${origin_dir}/imports/PIO_EP.v" ]\
 [file normalize "${origin_dir}/imports/PIO_EP_MEM_ACCESS.v" ]\
 [file normalize "${origin_dir}/imports/PIO_RX_ENGINE.v" ]\
 [file normalize "${origin_dir}/imports/PIO_TO_CTRL.v" ]\
 [file normalize "${origin_dir}/imports/PIO_TX_ENGINE.v" ]\
 [file normalize "${origin_dir}/pcie_7x_0_ex.gen/sources_1/bd/pcie_bd/hdl/pcie_bd_wrapper.v" ]\
 [file normalize "${origin_dir}/imports/hierarchy.txt" ]\
]
set imported_files ""
foreach f $files {
  lappend imported_files [import_files -fileset sources_1 $f]
}

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "new/err_mask.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "fifo_xdma_desc/fifo_xdma_desc.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "fifo_dma_wr/fifo_dma_wr.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}

set file "new/color_format.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "imports/EP_MEM.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "imports/PIO.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "imports/PIO_EP.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "imports/PIO_EP_MEM_ACCESS.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "imports/PIO_RX_ENGINE.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "imports/PIO_TO_CTRL.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "imports/PIO_TX_ENGINE.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj

set file "hdl/pcie_bd_wrapper.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "is_enabled" -value "0" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "xilinx_pcie_2_1_ep_7x" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/ip/pcie_7x_0/pcie_7x_0.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "pcie_7x_0/pcie_7x_0.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set IP repository paths
set obj [get_filesets fifo_dma_rd]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/../vitis_hls-dev"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/sources_1/ip/fifo_dma_rd/fifo_dma_rd.xci" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "fifo_dma_rd/fifo_dma_rd.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/imports/xilinx_pcie_7x_ep_x4g2.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "imports/xilinx_pcie_7x_ep_x4g2.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[get_files [list "*imports/xilinx_pcie_7x_ep_x4g2.xdc"]]" -objects $obj
set_property -name "target_part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "target_ucf" -value "[get_files [list "*imports/xilinx_pcie_7x_ep_x4g2.xdc"]]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/imports/board_common.vh" ]\
 [file normalize "${origin_dir}/imports/pci_exp_usrapp_cfg.v" ]\
 [file normalize "${origin_dir}/imports/pci_exp_expect_tasks.vh" ]\
 [file normalize "${origin_dir}/imports/pci_exp_usrapp_com.v" ]\
 [file normalize "${origin_dir}/imports/pci_exp_usrapp_pl.v" ]\
 [file normalize "${origin_dir}/imports/pci_exp_usrapp_rx.v" ]\
 [file normalize "${origin_dir}/imports/sample_tests1.vh" ]\
 [file normalize "${origin_dir}/imports/tests.vh" ]\
 [file normalize "${origin_dir}/imports/pci_exp_usrapp_tx.v" ]\
 [file normalize "${origin_dir}/imports/pcie_2_1_rport_7x.v" ]\
 [file normalize "${origin_dir}/imports/pcie_axi_trn_bridge.v" ]\
 [file normalize "${origin_dir}/imports/sys_clk_gen.v" ]\
 [file normalize "${origin_dir}/imports/sys_clk_gen_ds.v" ]\
 [file normalize "${origin_dir}/imports/xilinx_pcie_2_1_rport_7x.v" ]\
 [file normalize "${origin_dir}/imports/board.v" ]\
 [file normalize "${origin_dir}/imports/xil_sig2pipe.v" ]\
]
set imported_files ""
foreach f $files {
  lappend imported_files [import_files -fileset sim_1 $f]
}

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
set file "imports/board_common.vh"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/pci_exp_usrapp_cfg.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/pci_exp_expect_tasks.vh"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/pci_exp_usrapp_com.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/pci_exp_usrapp_pl.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/pci_exp_usrapp_rx.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/sample_tests1.vh"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/tests.vh"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/pci_exp_usrapp_tx.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/pcie_2_1_rport_7x.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/pcie_axi_trn_bridge.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/sys_clk_gen.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/sys_clk_gen_ds.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/xilinx_pcie_2_1_rport_7x.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/board.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "imports/xil_sig2pipe.v"
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "used_in" -value "implementation simulation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj


# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "sim_wrapper_top" -value "1" -objects $obj
set_property -name "top" -value "board" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/pcie_7x_0_ex.srcs/utils_1/imports/synth_1/xilinx_pcie_2_1_ep_7x.dcp" ]\
]
set imported_files ""
foreach f $files {
  lappend imported_files [import_files -fileset utils_1 $f]
}

# Set 'utils_1' fileset file properties for remote files
# None

# Set 'utils_1' fileset file properties for local files
set file "synth_1/xilinx_pcie_2_1_ep_7x.dcp"
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "netlist_only" -value "0" -objects $file_obj


# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files [list tlp_reg.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_reg.v
}
if { [get_files [list zzlab_env_ctrl.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/zzlab_env_ctrl.v
}
if { [get_files [list err_mask.vh]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/err_mask.vh
}
if { [get_files [list tlp_dma_wr.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_wr.v
}
if { [get_files [list tlp_dma_wr_ctrl.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_wr_ctrl.v
}
if { [get_files [list fifo_xdma_desc.xci]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/ip/fifo_xdma_desc/fifo_xdma_desc.xci
}
if { [get_files [list err_mask.vh]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/err_mask.vh
}
if { [get_files [list tlp_xdma_desc_rd.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_xdma_desc_rd.v
}
if { [get_files [list axis_src.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/axis_src.v
}
if { [get_files [list tlp_dma_rd_ctrl.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_ctrl.v
}
if { [get_files [list err_mask.vh]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/err_mask.vh
}
if { [get_files [list tlp_dma_rd.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd.v
}
if { [get_files [list axis_sink.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/axis_sink.v
}
if { [get_files [list fifo_dma_rd.xci]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/ip/fifo_dma_rd/fifo_dma_rd.xci
}
if { [get_files [list tlp_dma_rd_rc_fifo.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_rc_fifo.v
}
if { [get_files [list fifo_fwft2.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/fifo_fwft2.v
}
if { [get_files [list tlp_dma_rd_burst.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_dma_rd_burst.v
}
if { [get_files [list fifo_xdma_desc.xci]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/ip/fifo_xdma_desc/fifo_xdma_desc.xci
}
if { [get_files [list err_mask.vh]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/err_mask.vh
}
if { [get_files [list tlp_xdma_desc_rd.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_xdma_desc_rd.v
}
if { [get_files [list pcie_turnoff.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/pcie_turnoff.v
}
if { [get_files [list pcie_intr_ctrl.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/pcie_intr_ctrl.v
}
if { [get_files [list priority_encoder.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/priority_encoder.v
}
if { [get_files [list pcie_intr.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/pcie_intr.v
}
if { [get_files [list tlp_demuxer_cq.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_cq.v
}
if { [get_files [list tlp_demuxer_rc_desc.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_rc_desc.v
}
if { [get_files [list tlp_demuxer_rc_grp.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer_rc_grp.v
}
if { [get_files [list tlp_demuxer.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_demuxer.v
}
if { [get_files [list priority_encoder.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/priority_encoder.v
}
if { [get_files [list tlp_muxer.v]] == "" } {
  import_files -quiet -fileset sources_1 /home/zzlee/pcie_7x_0_ex/pcie_7x_0_ex.srcs/sources_1/new/tlp_muxer.v
}


# Proc to create BD bd_ila
proc cr_bd_bd_ila { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# tlp_reg, zzlab_env_ctrl, pcie_turnoff, tlp_demuxer, tlp_dma_wr, tlp_dma_wr_ctrl, tlp_xdma_desc_rd, axis_src, tlp_dma_rd_ctrl, tlp_dma_rd, axis_sink, tlp_dma_rd_rc_fifo, tlp_dma_rd_burst, tlp_xdma_desc_rd, pcie_intr_ctrl, pcie_intr, tlp_muxer



  # CHANGE DESIGN NAME HERE
  set design_name bd_ila

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:axis_register_slice:1.1\
  xilinx.com:ip:system_ila:1.1\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:v_tpg:8.2\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  tlp_reg\
  zzlab_env_ctrl\
  pcie_turnoff\
  tlp_demuxer\
  tlp_dma_wr\
  tlp_dma_wr_ctrl\
  tlp_xdma_desc_rd\
  axis_src\
  tlp_dma_rd_ctrl\
  tlp_dma_rd\
  axis_sink\
  tlp_dma_rd_rc_fifo\
  tlp_dma_rd_burst\
  tlp_xdma_desc_rd\
  pcie_intr_ctrl\
  pcie_intr\
  tlp_muxer\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: vsrc_0
proc create_hier_cell_vsrc_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_vsrc_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_CTRL


  # Create pins
  create_bd_pin -dir I -type clk user_clk
  create_bd_pin -dir I -type rst ap_rst_n

  # Create instance: v_tpg_0, and set properties
  set v_tpg_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_tpg:8.2 v_tpg_0 ]
  set_property -dict [list \
    CONFIG.COLOR_SWEEP {0} \
    CONFIG.DISPLAY_PORT {0} \
    CONFIG.FOREGROUND {0} \
    CONFIG.HAS_AXI4S_SLAVE {1} \
    CONFIG.HAS_AXI4_YUV422_YUV420 {1} \
    CONFIG.RAMP {0} \
    CONFIG.SAMPLES_PER_CLOCK {4} \
    CONFIG.ZONE_PLATE {0} \
  ] $v_tpg_0


  # Create instance: tvalid_not, and set properties
  set tvalid_not [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 tvalid_not ]
  set_property CONFIG.CONST_VAL {0} $tvalid_not


  # Create instance: tready_1, and set properties
  set tready_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 tready_1 ]

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_reg_M04_AXI [get_bd_intf_pins s_axi_CTRL] [get_bd_intf_pins v_tpg_0/s_axi_CTRL]

  # Create port connections
  connect_bd_net -net ap_rst_n_Dout2  [get_bd_pins ap_rst_n] \
  [get_bd_pins v_tpg_0/ap_rst_n]
  connect_bd_net -net tready_1_dout  [get_bd_pins tready_1/dout] \
  [get_bd_pins v_tpg_0/m_axis_video_TREADY]
  connect_bd_net -net tvalid_not_dout  [get_bd_pins tvalid_not/dout] \
  [get_bd_pins v_tpg_0/s_axis_video_TVALID]
  connect_bd_net -net user_clk_0_1  [get_bd_pins user_clk] \
  [get_bd_pins v_tpg_0/ap_clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: tlp_muxer_0
proc create_hier_cell_tlp_muxer_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_tlp_muxer_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s01_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s03_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s04_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s02_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s00_axis


  # Create pins
  create_bd_pin -dir I -type clk user_clk
  create_bd_pin -dir I -type rst aresetn

  # Create instance: tlp_muxer, and set properties
  set block_name tlp_muxer
  set block_cell_name tlp_muxer
  if { [catch {set tlp_muxer [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_muxer eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins tlp_muxer/s02_axis] [get_bd_intf_pins s02_axis]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins tlp_muxer/s00_axis] [get_bd_intf_pins s00_axis]
  connect_bd_intf_net -intf_net tlp_dma_rd_0_s_axis_rr [get_bd_intf_pins s04_axis] [get_bd_intf_pins tlp_muxer/s04_axis]
  connect_bd_intf_net -intf_net tlp_dma_rd_0_s_axis_rr_desc [get_bd_intf_pins s03_axis] [get_bd_intf_pins tlp_muxer/s03_axis]
  connect_bd_intf_net -intf_net tlp_dma_wr_0_s_axis_rr_desc [get_bd_intf_pins s01_axis] [get_bd_intf_pins tlp_muxer/s01_axis]
  connect_bd_intf_net -intf_net tlp_muxer_0_m_axis [get_bd_intf_pins m_axis] [get_bd_intf_pins tlp_muxer/m_axis]

  # Create port connections
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn  [get_bd_pins aresetn] \
  [get_bd_pins tlp_muxer/rst_n]
  connect_bd_net -net user_clk_0_1  [get_bd_pins user_clk] \
  [get_bd_pins tlp_muxer/clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: pcie_intr
proc create_hier_cell_pcie_intr { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_pcie_intr() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_ctrl


  # Create pins
  create_bd_pin -dir I -type clk user_clk
  create_bd_pin -dir I -type rst rst_n
  create_bd_pin -dir I -from 3 -to 0 -type intr intr
  create_bd_pin -dir O -type intr cfg_interrupt
  create_bd_pin -dir I -type data cfg_interrupt_rdy
  create_bd_pin -dir O -from 7 -to 0 cfg_interrupt_di

  # Create instance: pcie_intr_ctrl, and set properties
  set block_name pcie_intr_ctrl
  set block_cell_name pcie_intr_ctrl
  if { [catch {set pcie_intr_ctrl [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pcie_intr_ctrl eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pcie_intr, and set properties
  set block_name pcie_intr
  set block_cell_name pcie_intr
  if { [catch {set pcie_intr [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pcie_intr eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins pcie_intr_ctrl/s_axi_ctrl] [get_bd_intf_pins s_axi_ctrl]

  # Create port connections
  connect_bd_net -net cfg_interrupt_rdy_1  [get_bd_pins cfg_interrupt_rdy] \
  [get_bd_pins pcie_intr/cfg_interrupt_rdy]
  connect_bd_net -net intr_map_dout  [get_bd_pins intr] \
  [get_bd_pins pcie_intr/intr]
  connect_bd_net -net pcie_intr_0_cfg_interrupt  [get_bd_pins pcie_intr/cfg_interrupt] \
  [get_bd_pins cfg_interrupt]
  connect_bd_net -net pcie_intr_0_cfg_interrupt_di  [get_bd_pins pcie_intr/cfg_interrupt_di] \
  [get_bd_pins cfg_interrupt_di]
  connect_bd_net -net pcie_intr_ctrl_vector_map_0  [get_bd_pins pcie_intr_ctrl/vector_map_0] \
  [get_bd_pins pcie_intr/vector_map_0]
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn  [get_bd_pins rst_n] \
  [get_bd_pins pcie_intr/rst_n] \
  [get_bd_pins pcie_intr_ctrl/rst_n]
  connect_bd_net -net user_clk_0_1  [get_bd_pins user_clk] \
  [get_bd_pins pcie_intr/clk] \
  [get_bd_pins pcie_intr_ctrl/clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: tlp_dma_rd_0
proc create_hier_cell_tlp_dma_rd_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_tlp_dma_rd_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_rc

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_rc_desc

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_ctrl

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_rr_desc

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_rr

  create_bd_intf_pin -mode Monitor -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ap


  # Create pins
  create_bd_pin -dir I -type clk user_clk
  create_bd_pin -dir I -type rst rst_n
  create_bd_pin -dir O -type intr interrupt
  create_bd_pin -dir I -from 15 -to 0 cfg_completer_id

  # Create instance: tlp_dma_rd_ctrl, and set properties
  set block_name tlp_dma_rd_ctrl
  set block_cell_name tlp_dma_rd_ctrl
  if { [catch {set tlp_dma_rd_ctrl [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_dma_rd_ctrl eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: tlp_dma_rd, and set properties
  set block_name tlp_dma_rd
  set block_cell_name tlp_dma_rd
  if { [catch {set tlp_dma_rd [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_dma_rd eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.C_GRP_IDX {0000} \
    CONFIG.C_RC_COUNT {16} \
  ] $tlp_dma_rd


  # Create instance: axis_sink_0, and set properties
  set block_name axis_sink
  set block_cell_name axis_sink_0
  if { [catch {set axis_sink_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_sink_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.C_DATA_WIDTH {64} \
    CONFIG.KEEP_WIDTH {8} \
  ] $axis_sink_0


  # Create instance: tlp_dma_rd_rc_fifo, and set properties
  set block_name tlp_dma_rd_rc_fifo
  set block_cell_name tlp_dma_rd_rc_fifo
  if { [catch {set tlp_dma_rd_rc_fifo [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_dma_rd_rc_fifo eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.C_RC_COUNT {16} $tlp_dma_rd_rc_fifo


  # Create instance: tlp_dma_rd_burst, and set properties
  set block_name tlp_dma_rd_burst
  set block_cell_name tlp_dma_rd_burst
  if { [catch {set tlp_dma_rd_burst [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_dma_rd_burst eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.C_RC_COUNT {16} $tlp_dma_rd_burst


  # Create instance: tlp_xdma_desc_rd, and set properties
  set block_name tlp_xdma_desc_rd
  set block_cell_name tlp_xdma_desc_rd
  if { [catch {set tlp_xdma_desc_rd [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_xdma_desc_rd eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins tlp_dma_rd_rc_fifo/s_axis_rc] [get_bd_intf_pins s_axis_rc]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins tlp_dma_rd_ctrl/s_axi_ctrl] [get_bd_intf_pins s_axi_ctrl]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins tlp_dma_rd/m_axis_rr] [get_bd_intf_pins m_axis_rr]
  connect_bd_intf_net -intf_net s_axis_rc_desc_1 [get_bd_intf_pins tlp_xdma_desc_rd/s_axis_rc_desc] [get_bd_intf_pins s_axis_rc_desc]
  connect_bd_intf_net -intf_net tlp_dma_rd_dma_rd_burst_s_axis_ap [get_bd_intf_pins tlp_dma_rd_burst/s_axis_ap] [get_bd_intf_pins tlp_dma_rd/dma_rd_burst_s_axis_ap]
  connect_bd_intf_net -intf_net [get_bd_intf_nets tlp_dma_rd_dma_rd_burst_s_axis_ap] [get_bd_intf_pins tlp_dma_rd_burst/s_axis_ap] [get_bd_intf_pins s_axis_ap]
  connect_bd_intf_net -intf_net tlp_dma_rd_rc_fifo_0_m_axis_fifo [get_bd_intf_pins tlp_dma_rd_rc_fifo/m_axis_fifo] [get_bd_intf_pins tlp_dma_rd_burst/s_axis_fifo]
  connect_bd_intf_net -intf_net tlp_dma_rd_s00_axis [get_bd_intf_pins axis_sink_0/s_axis] [get_bd_intf_pins tlp_dma_rd_burst/m_axis]
  connect_bd_intf_net -intf_net tlp_xdma_desc_rd_0_m_axis_rr_desc [get_bd_intf_pins tlp_xdma_desc_rd/m_axis_rr_desc] [get_bd_intf_pins m_axis_rr_desc]

  # Create port connections
  connect_bd_net -net cfg_completer_id_1  [get_bd_pins cfg_completer_id] \
  [get_bd_pins tlp_xdma_desc_rd/cfg_completer_id] \
  [get_bd_pins tlp_dma_rd/cfg_completer_id]
  connect_bd_net -net rst_n_1  [get_bd_pins rst_n] \
  [get_bd_pins axis_sink_0/rst_n] \
  [get_bd_pins tlp_dma_rd_ctrl/rst_n] \
  [get_bd_pins tlp_dma_rd_burst/rst_n] \
  [get_bd_pins tlp_dma_rd_rc_fifo/rst_n] \
  [get_bd_pins tlp_xdma_desc_rd/rst_n] \
  [get_bd_pins tlp_dma_rd/rst_n]
  connect_bd_net -net tlp_dma_rd_0_ap_done  [get_bd_pins tlp_dma_rd/ap_done] \
  [get_bd_pins tlp_dma_rd_ctrl/ap_done]
  connect_bd_net -net tlp_dma_rd_0_ap_idle  [get_bd_pins tlp_dma_rd/ap_idle] \
  [get_bd_pins tlp_dma_rd_ctrl/ap_idle]
  connect_bd_net -net tlp_dma_rd_0_ap_ready  [get_bd_pins tlp_dma_rd/ap_ready] \
  [get_bd_pins tlp_dma_rd_ctrl/ap_ready]
  connect_bd_net -net tlp_dma_rd_ERR_MASK  [get_bd_pins tlp_dma_rd/ERR_MASK] \
  [get_bd_pins tlp_dma_rd_ctrl/ERR_MASK]
  connect_bd_net -net tlp_dma_rd_burst_0_fifo_tx_empty  [get_bd_pins tlp_dma_rd_burst/fifo_tx_empty] \
  [get_bd_pins tlp_dma_rd/dma_rd_burst_fifo_empty]
  connect_bd_net -net tlp_dma_rd_ctrl_0_ap_start  [get_bd_pins tlp_dma_rd_ctrl/ap_start] \
  [get_bd_pins axis_sink_0/ap_start] \
  [get_bd_pins tlp_dma_rd/ap_start]
  connect_bd_net -net tlp_dma_rd_ctrl_0_interrupt  [get_bd_pins tlp_dma_rd_ctrl/interrupt] \
  [get_bd_pins interrupt]
  connect_bd_net -net tlp_dma_rd_ctrl_0_size  [get_bd_pins tlp_dma_rd_ctrl/SIZE] \
  [get_bd_pins tlp_dma_rd/SIZE]
  connect_bd_net -net tlp_dma_rd_ctrl_DESC_ADDR  [get_bd_pins tlp_dma_rd_ctrl/DESC_ADDR] \
  [get_bd_pins tlp_xdma_desc_rd/DESC_ADDR]
  connect_bd_net -net tlp_dma_rd_ctrl_DESC_ADJ  [get_bd_pins tlp_dma_rd_ctrl/DESC_ADJ] \
  [get_bd_pins tlp_xdma_desc_rd/DESC_ADJ]
  connect_bd_net -net tlp_dma_rd_desc_rd_ap_start  [get_bd_pins tlp_dma_rd/desc_rd_ap_start] \
  [get_bd_pins tlp_xdma_desc_rd/ap_start]
  connect_bd_net -net tlp_dma_rd_desc_rd_rd_en  [get_bd_pins tlp_dma_rd/desc_rd_rd_en] \
  [get_bd_pins tlp_xdma_desc_rd/rd_en]
  connect_bd_net -net tlp_dma_rd_dma_rd_burst_s_axis_ap_burst_bytes  [get_bd_pins tlp_dma_rd/dma_rd_burst_s_axis_ap_burst_bytes] \
  [get_bd_pins tlp_dma_rd_burst/s_axis_ap_burst_bytes]
  connect_bd_net -net tlp_xdma_desc_rd_0_ERR_MASK  [get_bd_pins tlp_xdma_desc_rd/ERR_MASK] \
  [get_bd_pins tlp_dma_rd/desc_rd_ERR_MASK]
  connect_bd_net -net tlp_xdma_desc_rd_0_ap_ready  [get_bd_pins tlp_xdma_desc_rd/ap_ready] \
  [get_bd_pins tlp_dma_rd/desc_rd_ap_ready]
  connect_bd_net -net tlp_xdma_desc_rd_0_data_addr  [get_bd_pins tlp_xdma_desc_rd/data_addr] \
  [get_bd_pins tlp_dma_rd/desc_rd_data_addr]
  connect_bd_net -net tlp_xdma_desc_rd_0_data_bytes  [get_bd_pins tlp_xdma_desc_rd/data_bytes] \
  [get_bd_pins tlp_dma_rd/desc_rd_data_bytes]
  connect_bd_net -net tlp_xdma_desc_rd_0_data_valid  [get_bd_pins tlp_xdma_desc_rd/data_valid] \
  [get_bd_pins tlp_dma_rd/desc_rd_data_valid]
  connect_bd_net -net user_clk_0_1  [get_bd_pins user_clk] \
  [get_bd_pins axis_sink_0/clk] \
  [get_bd_pins tlp_dma_rd_ctrl/clk] \
  [get_bd_pins tlp_dma_rd_burst/clk] \
  [get_bd_pins tlp_dma_rd_rc_fifo/clk] \
  [get_bd_pins tlp_xdma_desc_rd/clk] \
  [get_bd_pins tlp_dma_rd/clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: tlp_dma_wr_0
proc create_hier_cell_tlp_dma_wr_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_tlp_dma_wr_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_ctrl

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_rr_desc

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_rr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_rc_desc


  # Create pins
  create_bd_pin -dir I -type clk user_clk
  create_bd_pin -dir I -type rst rst_n
  create_bd_pin -dir I -from 15 -to 0 cfg_completer_id
  create_bd_pin -dir O -type intr interrupt

  # Create instance: tlp_dma_wr, and set properties
  set block_name tlp_dma_wr
  set block_cell_name tlp_dma_wr
  if { [catch {set tlp_dma_wr [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_dma_wr eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.C_MAX_BURST_SIZE {256} $tlp_dma_wr


  # Create instance: tlp_dma_wr_ctrl, and set properties
  set block_name tlp_dma_wr_ctrl
  set block_cell_name tlp_dma_wr_ctrl
  if { [catch {set tlp_dma_wr_ctrl [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_dma_wr_ctrl eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: tlp_xdma_desc_rd_0, and set properties
  set block_name tlp_xdma_desc_rd
  set block_cell_name tlp_xdma_desc_rd_0
  if { [catch {set tlp_xdma_desc_rd_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_xdma_desc_rd_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_src_0, and set properties
  set block_name axis_src
  set block_cell_name axis_src_0
  if { [catch {set axis_src_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_src_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.C_DATA_WIDTH {96} \
    CONFIG.KEEP_WIDTH {12} \
  ] $axis_src_0


  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins tlp_dma_wr_ctrl/s_axi_ctrl] [get_bd_intf_pins s_axi_ctrl]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins tlp_dma_wr/m_axis_rr] [get_bd_intf_pins m_axis_rr]
  connect_bd_intf_net -intf_net axis_src_0_m_axis [get_bd_intf_pins axis_src_0/m_axis] [get_bd_intf_pins tlp_dma_wr/s_axis]
  connect_bd_intf_net -intf_net s_axis_rc_desc_1 [get_bd_intf_pins s_axis_rc_desc] [get_bd_intf_pins tlp_xdma_desc_rd_0/s_axis_rc_desc]
  connect_bd_intf_net -intf_net tlp_xdma_desc_rd_0_m_axis_rr_desc [get_bd_intf_pins m_axis_rr_desc] [get_bd_intf_pins tlp_xdma_desc_rd_0/m_axis_rr_desc]

  # Create port connections
  connect_bd_net -net cfg_completer_id_1  [get_bd_pins cfg_completer_id] \
  [get_bd_pins tlp_xdma_desc_rd_0/cfg_completer_id] \
  [get_bd_pins tlp_dma_wr/cfg_completer_id]
  connect_bd_net -net rst_pins_Dout  [get_bd_pins rst_n] \
  [get_bd_pins tlp_dma_wr_ctrl/rst_n] \
  [get_bd_pins tlp_xdma_desc_rd_0/rst_n] \
  [get_bd_pins tlp_dma_wr/rst_n] \
  [get_bd_pins axis_src_0/rst_n]
  connect_bd_net -net tlp_dma_wr_0_ap_done  [get_bd_pins tlp_dma_wr/ap_done] \
  [get_bd_pins tlp_dma_wr_ctrl/ap_done]
  connect_bd_net -net tlp_dma_wr_0_ap_idle  [get_bd_pins tlp_dma_wr/ap_idle] \
  [get_bd_pins tlp_dma_wr_ctrl/ap_idle]
  connect_bd_net -net tlp_dma_wr_0_ap_ready  [get_bd_pins tlp_dma_wr/ap_ready] \
  [get_bd_pins tlp_dma_wr_ctrl/ap_ready]
  connect_bd_net -net tlp_dma_wr_ERR_MASK  [get_bd_pins tlp_dma_wr/ERR_MASK] \
  [get_bd_pins tlp_dma_wr_ctrl/ERR_MASK]
  connect_bd_net -net tlp_dma_wr_ctrl_0_ap_start  [get_bd_pins tlp_dma_wr_ctrl/ap_start] \
  [get_bd_pins tlp_dma_wr/ap_start] \
  [get_bd_pins axis_src_0/ap_start]
  connect_bd_net -net tlp_dma_wr_ctrl_0_interrupt  [get_bd_pins tlp_dma_wr_ctrl/interrupt] \
  [get_bd_pins interrupt]
  connect_bd_net -net tlp_dma_wr_ctrl_0_size  [get_bd_pins tlp_dma_wr_ctrl/SIZE] \
  [get_bd_pins tlp_dma_wr/SIZE]
  connect_bd_net -net tlp_dma_wr_ctrl_DESC_ADDR  [get_bd_pins tlp_dma_wr_ctrl/DESC_ADDR] \
  [get_bd_pins tlp_xdma_desc_rd_0/DESC_ADDR]
  connect_bd_net -net tlp_dma_wr_ctrl_DESC_ADJ  [get_bd_pins tlp_dma_wr_ctrl/DESC_ADJ] \
  [get_bd_pins tlp_xdma_desc_rd_0/DESC_ADJ]
  connect_bd_net -net tlp_dma_wr_desc_rd_ap_start  [get_bd_pins tlp_dma_wr/desc_rd_ap_start] \
  [get_bd_pins tlp_xdma_desc_rd_0/ap_start]
  connect_bd_net -net tlp_dma_wr_desc_rd_rd_en  [get_bd_pins tlp_dma_wr/desc_rd_rd_en] \
  [get_bd_pins tlp_xdma_desc_rd_0/rd_en]
  connect_bd_net -net tlp_xdma_desc_rd_0_ERR_MASK  [get_bd_pins tlp_xdma_desc_rd_0/ERR_MASK] \
  [get_bd_pins tlp_dma_wr/desc_rd_ERR_MASK]
  connect_bd_net -net tlp_xdma_desc_rd_0_ap_ready  [get_bd_pins tlp_xdma_desc_rd_0/ap_ready] \
  [get_bd_pins tlp_dma_wr/desc_rd_ap_ready]
  connect_bd_net -net tlp_xdma_desc_rd_0_data_addr  [get_bd_pins tlp_xdma_desc_rd_0/data_addr] \
  [get_bd_pins tlp_dma_wr/desc_rd_data_addr]
  connect_bd_net -net tlp_xdma_desc_rd_0_data_bytes  [get_bd_pins tlp_xdma_desc_rd_0/data_bytes] \
  [get_bd_pins tlp_dma_wr/desc_rd_data_bytes]
  connect_bd_net -net tlp_xdma_desc_rd_0_data_valid  [get_bd_pins tlp_xdma_desc_rd_0/data_valid] \
  [get_bd_pins tlp_dma_wr/desc_rd_data_valid]
  connect_bd_net -net user_clk_0_1  [get_bd_pins user_clk] \
  [get_bd_pins tlp_dma_wr_ctrl/clk] \
  [get_bd_pins tlp_xdma_desc_rd_0/clk] \
  [get_bd_pins tlp_dma_wr/clk] \
  [get_bd_pins axis_src_0/clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: ap_rst_n
proc create_hier_cell_ap_rst_n { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_ap_rst_n() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 31 -to 0 Din
  create_bd_pin -dir O -from 0 -to 0 Dout
  create_bd_pin -dir O -from 0 -to 0 Dout1
  create_bd_pin -dir O -from 0 -to 0 Dout2

  # Create instance: pin_1, and set properties
  set pin_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 pin_1 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_TO {1} \
  ] $pin_1


  # Create instance: pin_0, and set properties
  set pin_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 pin_0 ]

  # Create instance: pin_2, and set properties
  set pin_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 pin_2 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {2} \
  ] $pin_2


  # Create port connections
  connect_bd_net -net pin_2_Dout  [get_bd_pins pin_2/Dout] \
  [get_bd_pins Dout2]
  connect_bd_net -net rst_0_Dout  [get_bd_pins pin_0/Dout] \
  [get_bd_pins Dout]
  connect_bd_net -net rst_1_Dout  [get_bd_pins pin_1/Dout] \
  [get_bd_pins Dout1]
  connect_bd_net -net zzlab_env_ctrl_0_rst  [get_bd_pins Din] \
  [get_bd_pins pin_0/Din] \
  [get_bd_pins pin_1/Din] \
  [get_bd_pins pin_2/Din]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set m_axis_rx [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_rx ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.LAYERED_METADATA {undef} \
   CONFIG.TDATA_NUM_BYTES {8} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {22} \
   ] $m_axis_rx

  set s_axis_tx [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_tx ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
   ] $s_axis_tx


  # Create ports
  set user_reset [ create_bd_port -dir I -type rst user_reset ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $user_reset
  set cfg_to_turnoff [ create_bd_port -dir I cfg_to_turnoff ]
  set user_clk [ create_bd_port -dir I -type clk -freq_hz 250000000 user_clk ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {m_axis_rx:s_axis_tx} \
   CONFIG.ASSOCIATED_RESET {user_reset:sys_aresetn} \
 ] $user_clk
  set user_lnk_up [ create_bd_port -dir I user_lnk_up ]
  set cfg_completer_id [ create_bd_port -dir I -from 15 -to 0 cfg_completer_id ]
  set cfg_turnoff_ok [ create_bd_port -dir O cfg_turnoff_ok ]
  set cfg_interrupt_rdy [ create_bd_port -dir I -type data cfg_interrupt_rdy ]
  set cfg_interrupt [ create_bd_port -dir O -type data cfg_interrupt ]
  set cfg_interrupt_di [ create_bd_port -dir O -from 7 -to 0 -type data cfg_interrupt_di ]

  # Create instance: tlp_reg_0, and set properties
  set block_name tlp_reg
  set block_cell_name tlp_reg_0
  if { [catch {set tlp_reg_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_reg_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axi_interconnect_reg, and set properties
  set axi_interconnect_reg [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_reg ]
  set_property CONFIG.NUM_MI {5} $axi_interconnect_reg


  # Create instance: proc_sys_reset, and set properties
  set proc_sys_reset [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset ]

  # Create instance: zzlab_env_ctrl_0, and set properties
  set block_name zzlab_env_ctrl
  set block_cell_name zzlab_env_ctrl_0
  if { [catch {set zzlab_env_ctrl_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $zzlab_env_ctrl_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.C_BOARD_VERSION {0x00000001} \
    CONFIG.C_PLATFORM {SC7X} \
    CONFIG.C_VERSION {0x25091001} \
  ] $zzlab_env_ctrl_0


  # Create instance: intr_map, and set properties
  set intr_map [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 intr_map ]
  set_property CONFIG.NUM_PORTS {4} $intr_map


  # Create instance: const_intr_0, and set properties
  set const_intr_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 const_intr_0 ]
  set_property CONFIG.CONST_VAL {0} $const_intr_0


  # Create instance: ap_rst_n
  create_hier_cell_ap_rst_n [current_bd_instance .] ap_rst_n

  # Create instance: tlp_dma_wr_0
  create_hier_cell_tlp_dma_wr_0 [current_bd_instance .] tlp_dma_wr_0

  # Create instance: axis_register_slice_rx, and set properties
  set axis_register_slice_rx [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_rx ]
  set_property CONFIG.REG_CONFIG {1} $axis_register_slice_rx


  # Create instance: tlp_dma_rd_0
  create_hier_cell_tlp_dma_rd_0 [current_bd_instance .] tlp_dma_rd_0

  # Create instance: axis_register_slice_tx, and set properties
  set axis_register_slice_tx [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_tx ]
  set_property CONFIG.REG_CONFIG {1} $axis_register_slice_tx


  # Create instance: pcie_turnoff_0, and set properties
  set block_name pcie_turnoff
  set block_cell_name pcie_turnoff_0
  if { [catch {set pcie_turnoff_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pcie_turnoff_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pcie_intr
  create_hier_cell_pcie_intr [current_bd_instance .] pcie_intr

  # Create instance: system_ila_0, and set properties
  set system_ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_ila:1.1 system_ila_0 ]
  set_property -dict [list \
    CONFIG.C_DATA_DEPTH {4096} \
    CONFIG.C_MON_TYPE {INTERFACE} \
    CONFIG.C_NUM_MONITOR_SLOTS {3} \
    CONFIG.C_NUM_OF_PROBES {3} \
    CONFIG.C_PROBE0_TYPE {0} \
    CONFIG.C_PROBE1_TYPE {0} \
    CONFIG.C_PROBE2_TYPE {0} \
    CONFIG.C_PROBE3_TYPE {0} \
    CONFIG.C_PROBE4_TYPE {0} \
    CONFIG.C_SLOT {0} \
    CONFIG.C_SLOT_0_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
    CONFIG.C_SLOT_0_TYPE {0} \
    CONFIG.C_SLOT_1_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
    CONFIG.C_SLOT_1_TYPE {0} \
    CONFIG.C_SLOT_2_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
    CONFIG.C_SLOT_3_INTF_TYPE {xilinx.com:interface:axis_rtl:1.0} \
  ] $system_ila_0


  # Create instance: tready_not, and set properties
  set tready_not [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 tready_not ]
  set_property CONFIG.CONST_VAL {0} $tready_not


  # Create instance: tlp_demuxer_0, and set properties
  set block_name tlp_demuxer
  set block_cell_name tlp_demuxer_0
  if { [catch {set tlp_demuxer_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $tlp_demuxer_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: tlp_muxer_0
  create_hier_cell_tlp_muxer_0 [current_bd_instance .] tlp_muxer_0

  # Create instance: vsrc_0
  create_hier_cell_vsrc_0 [current_bd_instance .] vsrc_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_reg_M00_AXI [get_bd_intf_pins zzlab_env_ctrl_0/s_axi_ctrl] [get_bd_intf_pins axi_interconnect_reg/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_reg_M01_AXI [get_bd_intf_pins axi_interconnect_reg/M01_AXI] [get_bd_intf_pins pcie_intr/s_axi_ctrl]
  connect_bd_intf_net -intf_net axi_interconnect_reg_M02_AXI [get_bd_intf_pins axi_interconnect_reg/M02_AXI] [get_bd_intf_pins tlp_dma_wr_0/s_axi_ctrl]
  connect_bd_intf_net -intf_net axi_interconnect_reg_M03_AXI [get_bd_intf_pins axi_interconnect_reg/M03_AXI] [get_bd_intf_pins tlp_dma_rd_0/s_axi_ctrl]
  connect_bd_intf_net -intf_net axi_interconnect_reg_M04_AXI [get_bd_intf_pins vsrc_0/s_axi_CTRL] [get_bd_intf_pins axi_interconnect_reg/M04_AXI]
  connect_bd_intf_net -intf_net axis_register_slice_rx_M_AXIS [get_bd_intf_pins tlp_demuxer_0/s_axis_rx] [get_bd_intf_pins axis_register_slice_rx/M_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_tx_M_AXIS [get_bd_intf_ports s_axis_tx] [get_bd_intf_pins axis_register_slice_tx/M_AXIS]
connect_bd_intf_net -intf_net [get_bd_intf_nets axis_register_slice_tx_M_AXIS] [get_bd_intf_ports s_axis_tx] [get_bd_intf_pins system_ila_0/SLOT_1_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets axis_register_slice_tx_M_AXIS]
  connect_bd_intf_net -intf_net m_axis_rx_0_1 [get_bd_intf_ports m_axis_rx] [get_bd_intf_pins axis_register_slice_rx/S_AXIS]
connect_bd_intf_net -intf_net [get_bd_intf_nets m_axis_rx_0_1] [get_bd_intf_ports m_axis_rx] [get_bd_intf_pins system_ila_0/SLOT_0_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets m_axis_rx_0_1]
  connect_bd_intf_net -intf_net s_axis_rc_desc_1 [get_bd_intf_pins tlp_dma_wr_0/s_axis_rc_desc] [get_bd_intf_pins tlp_demuxer_0/m00_axis_rc_desc]
  connect_bd_intf_net -intf_net tlp_demuxer_0_m02_axis_rc_desc [get_bd_intf_pins tlp_demuxer_0/m02_axis_rc_desc] [get_bd_intf_pins tlp_dma_rd_0/s_axis_rc_desc]
  connect_bd_intf_net -intf_net tlp_demuxer_1_m01_axis_rc_grp [get_bd_intf_pins tlp_demuxer_0/m00_axis_rc_grp] [get_bd_intf_pins tlp_dma_rd_0/s_axis_rc]
  connect_bd_intf_net -intf_net tlp_demuxer_1_m_axis_cq [get_bd_intf_pins tlp_demuxer_0/m_axis_cq] [get_bd_intf_pins tlp_reg_0/s_axis_cq]
connect_bd_intf_net -intf_net [get_bd_intf_nets tlp_demuxer_1_m_axis_cq] [get_bd_intf_pins tlp_demuxer_0/m_axis_cq] [get_bd_intf_pins system_ila_0/SLOT_2_AXIS]
  set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_intf_nets tlp_demuxer_1_m_axis_cq]
  connect_bd_intf_net -intf_net tlp_dma_rd_0_s_axis_rr [get_bd_intf_pins tlp_muxer_0/s04_axis] [get_bd_intf_pins tlp_dma_rd_0/m_axis_rr]
  connect_bd_intf_net -intf_net tlp_dma_rd_0_s_axis_rr_desc [get_bd_intf_pins tlp_muxer_0/s03_axis] [get_bd_intf_pins tlp_dma_rd_0/m_axis_rr_desc]
  connect_bd_intf_net -intf_net tlp_dma_wr_0_m_axis_rr [get_bd_intf_pins tlp_dma_wr_0/m_axis_rr] [get_bd_intf_pins tlp_muxer_0/s02_axis]
  connect_bd_intf_net -intf_net tlp_dma_wr_0_s_axis_rr_desc [get_bd_intf_pins tlp_muxer_0/s01_axis] [get_bd_intf_pins tlp_dma_wr_0/m_axis_rr_desc]
  connect_bd_intf_net -intf_net tlp_muxer_0_m_axis [get_bd_intf_pins tlp_muxer_0/m_axis] [get_bd_intf_pins axis_register_slice_tx/S_AXIS]
  connect_bd_intf_net -intf_net tlp_reg_0_m_axis_cc [get_bd_intf_pins tlp_reg_0/m_axis_cc] [get_bd_intf_pins tlp_muxer_0/s00_axis]
  connect_bd_intf_net -intf_net tlp_reg_0_s_axi_ctrl [get_bd_intf_pins tlp_reg_0/m_axi_ctrl] [get_bd_intf_pins axi_interconnect_reg/S00_AXI]

  # Create port connections
  connect_bd_net -net ap_rst_n_Dout2  [get_bd_pins ap_rst_n/Dout2] \
  [get_bd_pins vsrc_0/ap_rst_n]
  connect_bd_net -net cfg_completer_id_1  [get_bd_ports cfg_completer_id] \
  [get_bd_pins tlp_dma_wr_0/cfg_completer_id] \
  [get_bd_pins tlp_dma_rd_0/cfg_completer_id] \
  [get_bd_pins tlp_reg_0/cfg_completer_id] \
  [get_bd_pins tlp_demuxer_0/cfg_completer_id]
  connect_bd_net -net cfg_interrupt_rdy_1  [get_bd_ports cfg_interrupt_rdy] \
  [get_bd_pins pcie_intr/cfg_interrupt_rdy]
  connect_bd_net -net cfg_to_turnoff_1  [get_bd_ports cfg_to_turnoff] \
  [get_bd_pins pcie_turnoff_0/cfg_to_turnoff]
  connect_bd_net -net const_intr_0_dout  [get_bd_pins const_intr_0/dout] \
  [get_bd_pins intr_map/In3] \
  [get_bd_pins intr_map/In2]
  connect_bd_net -net intr_map_dout  [get_bd_pins intr_map/dout] \
  [get_bd_pins pcie_intr/intr]
  connect_bd_net -net pcie_intr_0_cfg_interrupt  [get_bd_pins pcie_intr/cfg_interrupt] \
  [get_bd_ports cfg_interrupt]
  connect_bd_net -net pcie_intr_0_cfg_interrupt_di  [get_bd_pins pcie_intr/cfg_interrupt_di] \
  [get_bd_ports cfg_interrupt_di]
  connect_bd_net -net pcie_turnoff_0_cfg_turnoff_ok  [get_bd_pins pcie_turnoff_0/cfg_turnoff_ok] \
  [get_bd_ports cfg_turnoff_ok]
  connect_bd_net -net proc_sys_reset_1_interconnect_aresetn  [get_bd_pins proc_sys_reset/interconnect_aresetn] \
  [get_bd_pins axi_interconnect_reg/ARESETN] \
  [get_bd_pins axi_interconnect_reg/S00_ARESETN] \
  [get_bd_pins axi_interconnect_reg/M00_ARESETN] \
  [get_bd_pins axi_interconnect_reg/M01_ARESETN] \
  [get_bd_pins axi_interconnect_reg/M02_ARESETN] \
  [get_bd_pins axi_interconnect_reg/M03_ARESETN] \
  [get_bd_pins axi_interconnect_reg/M04_ARESETN]
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn  [get_bd_pins proc_sys_reset/peripheral_aresetn] \
  [get_bd_pins axis_register_slice_rx/aresetn] \
  [get_bd_pins axis_register_slice_tx/aresetn] \
  [get_bd_pins pcie_turnoff_0/rst_n] \
  [get_bd_pins pcie_intr/rst_n] \
  [get_bd_pins zzlab_env_ctrl_0/rst_n] \
  [get_bd_pins tlp_reg_0/rst_n] \
  [get_bd_pins tlp_demuxer_0/rst_n] \
  [get_bd_pins tlp_muxer_0/aresetn] \
  [get_bd_pins system_ila_0/resetn]
  connect_bd_net -net rst_n_1  [get_bd_pins ap_rst_n/Dout1] \
  [get_bd_pins tlp_dma_rd_0/rst_n]
  connect_bd_net -net rst_pins_Dout  [get_bd_pins ap_rst_n/Dout] \
  [get_bd_pins tlp_dma_wr_0/rst_n]
  connect_bd_net -net tlp_dma_ctrl_0_interrupt  [get_bd_pins tlp_dma_wr_0/interrupt] \
  [get_bd_pins intr_map/In0]
  connect_bd_net -net tlp_dma_rd_0_interrupt  [get_bd_pins tlp_dma_rd_0/interrupt] \
  [get_bd_pins intr_map/In1]
  connect_bd_net -net tready_not_dout  [get_bd_pins tready_not/dout] \
  [get_bd_pins tlp_demuxer_0/m01_axis_rc_desc_tready] \
  [get_bd_pins tlp_demuxer_0/m01_axis_rc_grp_tready] \
  [get_bd_pins tlp_demuxer_0/m03_axis_rc_desc_tready]
  connect_bd_net -net user_clk_0_1  [get_bd_ports user_clk] \
  [get_bd_pins axi_interconnect_reg/ACLK] \
  [get_bd_pins axi_interconnect_reg/S00_ACLK] \
  [get_bd_pins axi_interconnect_reg/M00_ACLK] \
  [get_bd_pins axi_interconnect_reg/M01_ACLK] \
  [get_bd_pins proc_sys_reset/slowest_sync_clk] \
  [get_bd_pins tlp_dma_wr_0/user_clk] \
  [get_bd_pins axis_register_slice_rx/aclk] \
  [get_bd_pins axi_interconnect_reg/M02_ACLK] \
  [get_bd_pins tlp_dma_rd_0/user_clk] \
  [get_bd_pins axis_register_slice_tx/aclk] \
  [get_bd_pins pcie_turnoff_0/clk] \
  [get_bd_pins axi_interconnect_reg/M03_ACLK] \
  [get_bd_pins pcie_intr/user_clk] \
  [get_bd_pins system_ila_0/clk] \
  [get_bd_pins zzlab_env_ctrl_0/clk] \
  [get_bd_pins tlp_reg_0/clk] \
  [get_bd_pins tlp_demuxer_0/clk] \
  [get_bd_pins tlp_muxer_0/user_clk] \
  [get_bd_pins axi_interconnect_reg/M04_ACLK] \
  [get_bd_pins vsrc_0/user_clk]
  connect_bd_net -net user_reset_0_1  [get_bd_ports user_reset] \
  [get_bd_pins proc_sys_reset/ext_reset_in]
  connect_bd_net -net zzlab_env_ctrl_0_rst  [get_bd_pins zzlab_env_ctrl_0/ap_rst_n] \
  [get_bd_pins ap_rst_n/Din]

  # Create address segments
  assign_bd_address -offset 0x00001000 -range 0x00001000 -target_address_space [get_bd_addr_spaces tlp_reg_0/m_axi_ctrl] [get_bd_addr_segs pcie_intr/pcie_intr_ctrl/s_axi_ctrl/reg0] -force
  assign_bd_address -offset 0x00011000 -range 0x00001000 -target_address_space [get_bd_addr_spaces tlp_reg_0/m_axi_ctrl] [get_bd_addr_segs tlp_dma_rd_0/tlp_dma_rd_ctrl/s_axi_ctrl/reg0] -force
  assign_bd_address -offset 0x00010000 -range 0x00001000 -target_address_space [get_bd_addr_spaces tlp_reg_0/m_axi_ctrl] [get_bd_addr_segs tlp_dma_wr_0/tlp_dma_wr_ctrl/s_axi_ctrl/reg0] -force
  assign_bd_address -offset 0x00020000 -range 0x00010000 -target_address_space [get_bd_addr_spaces tlp_reg_0/m_axi_ctrl] [get_bd_addr_segs vsrc_0/v_tpg_0/s_axi_CTRL/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00001000 -target_address_space [get_bd_addr_spaces tlp_reg_0/m_axi_ctrl] [get_bd_addr_segs zzlab_env_ctrl_0/s_axi_ctrl/reg0] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Color Coded_ExpandedHierarchyInLayout":"",
   "Color Coded_Layers":"/proc_sys_reset_0_peripheral_aresetn:true|/proc_sys_reset_0_interconnect_aresetn:true|/user_reset_0_1:true|/user_clk_0_1:true|",
   "Color Coded_Layout":"# # String gsaved with Nlview 7.8.0 2024-04-26 e1825d835c VDI=44 GEI=38 GUI=JA:21.0 TLS
#  -string -flagsOSRD
preplace port m_axis_rx -pg 1 -lvl 0 -x 0 -y 340 -defaultsOSRD
preplace port s_axis_tx -pg 1 -lvl 9 -x 2920 -y 500 -defaultsOSRD
preplace port port-id_user_reset -pg 1 -lvl 0 -x 0 -y 430 -defaultsOSRD
preplace port port-id_cfg_to_turnoff -pg 1 -lvl 0 -x 0 -y 630 -defaultsOSRD
preplace port port-id_user_clk -pg 1 -lvl 0 -x 0 -y 370 -defaultsOSRD
preplace port port-id_user_lnk_up -pg 1 -lvl 0 -x 0 -y 20 -defaultsOSRD
preplace port port-id_cfg_turnoff_ok -pg 1 -lvl 9 -x 2920 -y 640 -defaultsOSRD
preplace port port-id_cfg_interrupt_rdy -pg 1 -lvl 0 -x 0 -y 140 -defaultsOSRD
preplace port port-id_cfg_interrupt -pg 1 -lvl 9 -x 2920 -y 200 -defaultsOSRD
preplace portBus cfg_completer_id -pg 1 -lvl 0 -x 0 -y 270 -defaultsOSRD
preplace portBus cfg_interrupt_di -pg 1 -lvl 9 -x 2920 -y 230 -defaultsOSRD
preplace inst tlp_demuxer_0 -pg 1 -lvl 3 -x 850 -y 390 -defaultsOSRD
preplace inst tlp_reg_0 -pg 1 -lvl 4 -x 1250 -y 500 -defaultsOSRD
preplace inst tlp_muxer_0 -pg 1 -lvl 7 -x 2430 -y 480 -defaultsOSRD
preplace inst axi_interconnect_reg -pg 1 -lvl 5 -x 1620 -y 180 -defaultsOSRD
preplace inst proc_sys_reset -pg 1 -lvl 1 -x 200 -y 450 -defaultsOSRD
preplace inst zzlab_env_ctrl_0 -pg 1 -lvl 6 -x 2050 -y 730 -defaultsOSRD
preplace inst intr_map -pg 1 -lvl 7 -x 2430 -y 270 -defaultsOSRD
preplace inst const_intr_0 -pg 1 -lvl 6 -x 2050 -y 850 -defaultsOSRD
preplace inst ap_rst_n -pg 1 -lvl 5 -x 1620 -y 700 -defaultsOSRD
preplace inst tlp_dma_wr_0 -pg 1 -lvl 6 -x 2050 -y 530 -defaultsOSRD
preplace inst axis_register_slice_rx -pg 1 -lvl 2 -x 510 -y 360 -defaultsOSRD
preplace inst tlp_dma_rd_0 -pg 1 -lvl 6 -x 2050 -y 300 -defaultsOSRD
preplace inst axis_register_slice_tx -pg 1 -lvl 8 -x 2740 -y 500 -defaultsOSRD
preplace inst pcie_turnoff_0 -pg 1 -lvl 8 -x 2740 -y 640 -defaultsOSRD
preplace inst pcie_intr -pg 1 -lvl 8 -x 2740 -y 210 -defaultsOSRD
preplace inst system_ila_0 -pg 1 -lvl 2 -x 510 -y 530 -defaultsOSRD
preplace inst tready_not -pg 1 -lvl 3 -x 850 -y 210 -defaultsOSRD
preplace netloc cfg_completer_id_1 1 0 6 NJ 270 NJ 270 630 270 1070 270 1460J 360 1830
preplace netloc cfg_interrupt_rdy_1 1 0 8 NJ 140 NJ 140 NJ 140 1080J 280 1440J 370 1840J 410 2240J 360 2580J
preplace netloc cfg_to_turnoff_1 1 0 8 NJ 630 NJ 630 NJ 630 NJ 630 NJ 630 NJ 630 NJ 630 2550J
preplace netloc const_intr_0_dout 1 6 1 2290 280n
preplace netloc intr_map_dout 1 7 1 2550 230n
preplace netloc pcie_intr_0_cfg_interrupt 1 8 1 NJ 200
preplace netloc pcie_intr_0_cfg_interrupt_di 1 8 1 2900J 220n
preplace netloc pcie_turnoff_0_cfg_turnoff_ok 1 8 1 NJ 640
preplace netloc proc_sys_reset_1_interconnect_aresetn 1 1 4 380J 280 620J 150 1060J 290 1470
preplace netloc proc_sys_reset_1_peripheral_aresetn 1 1 7 400 440 650 520 1060 620 NJ 620 1770 640 2310 610 2570
preplace netloc rst_n_1 1 5 1 1780 320n
preplace netloc rst_pins_Dout 1 5 1 1880 540n
preplace netloc tlp_demuxer_0_tlp_hdr_dw1_0 1 3 3 1050 600 NJ 600 1850
preplace netloc tlp_dma_ctrl_0_interrupt 1 6 1 2230 240n
preplace netloc tlp_dma_rd_0_interrupt 1 6 1 2220 260n
preplace netloc user_clk_0_1 1 0 8 20 350 390 450 640 510 1080 610 1450 500 1800 650 2300 600 2560
preplace netloc user_reset_0_1 1 0 1 NJ 430
preplace netloc zzlab_env_ctrl_0_rst 1 4 3 1470 910 NJ 910 2220
preplace netloc tready_not_dout 1 3 1 1050 210n
preplace netloc axi_interconnect_reg_M00_AXI 1 5 1 1820 150n
preplace netloc axis_register_slice_0_M_AXIS 1 2 1 N 360
preplace netloc axis_register_slice_tx_M_AXIS 1 8 1 NJ 500
preplace netloc m_axis_rx_0_1 1 0 2 NJ 340 NJ
preplace netloc tlp_muxer_0_m_axis 1 7 1 N 480
preplace netloc tlp_reg_0_s_axi_ctrl 1 4 1 1430 60n
preplace netloc tlp_reg_0_s_axis_cc 1 4 3 NJ 490 1860J 420 N
preplace netloc tlp_dma_wr_0_s_axis_rr_desc 1 6 1 2260 440n
preplace netloc tlp_dma_wr_0_s_axis_rr 1 6 1 2280 460n
preplace netloc tlp_dma_rd_0_s_axis_rr_desc 1 6 1 2270 280n
preplace netloc tlp_dma_rd_0_s_axis_rr 1 6 1 2250 300n
preplace netloc tlp_demuxer_0_m_axis_cq 1 3 1 1060 430n
preplace netloc axi_interconnect_reg_M01_AXI 1 5 3 NJ 170 NJ 170 N
preplace netloc axi_interconnect_reg_M02_AXI 1 5 1 1870 190n
preplace netloc tlp_demuxer_0_m00_axis_rc_desc 1 3 3 NJ 370 1420J 380 1810
preplace netloc tlp_demuxer_0_m01_axis_rc 1 3 3 NJ 390 NJ 390 1770
preplace netloc tlp_demuxer_0_m01_axis_rc_desc 1 3 3 1050J 400 NJ 400 1790
preplace netloc axi_interconnect_reg_M03_AXI 1 5 1 1880 210n
levelinfo -pg 1 0 200 510 850 1250 1620 2050 2430 2740 2920
pagesize -pg 1 -db -bbox -sgen -210 0 3110 920
",
   "Color Coded_ScaleFactor":"0.796297",
   "Color Coded_TopLeft":"637,63",
   "Default View_Layers":"/user_reset_0_1:true|/cfg_interrupt_rdy_1:true|/zzlab_env_ctrl_0_rst:true|/tlp_dma_rd_0/tlp_dma_rd_ctrl_0_interrupt:true|/user_clk_0_1:true|/proc_sys_reset_1_interconnect_aresetn:true|/proc_sys_reset_1_peripheral_aresetn:true|/pcie_intr/pcie_intr_0_cfg_interrupt:true|/tlp_dma_wr_0/tlp_dma_wr_ctrl_0_interrupt:true|",
   "Default View_ScaleFactor":"0.330171",
   "Default View_TopLeft":"-203,-161",
   "Display-PortTypeClock":"true",
   "Display-PortTypeData":"true",
   "Display-PortTypeInterrupt":"true",
   "Display-PortTypeOthers":"true",
   "Display-PortTypeReset":"true",
   "ExpandedHierarchyInLayout":"",
   "Interfaces View_ExpandedHierarchyInLayout":"",
   "Interfaces View_Layers":"/proc_sys_reset_0_peripheral_aresetn:false|/proc_sys_reset_0_interconnect_aresetn:false|/user_reset_0_1:false|/user_clk_0_1:false|/cfg_interrupt_rdy_1:false|/zzlab_env_ctrl_0_rst:false|/tlp_dma_rd_0/tlp_dma_rd_ctrl_0_interrupt:false|/proc_sys_reset_1_interconnect_aresetn:false|/proc_sys_reset_1_peripheral_aresetn:false|/pcie_intr/pcie_intr_0_cfg_interrupt:false|/tlp_dma_wr_0/tlp_dma_wr_ctrl_0_interrupt:false|",
   "Interfaces View_Layout":"# # String gsaved with Nlview 7.8.0 2024-04-26 e1825d835c VDI=44 GEI=38 GUI=JA:21.0 TLS
#  -string -flagsOSRD
preplace port m_axis_rx -pg 1 -lvl 0 -x 0 -y 300 -defaultsOSRD
preplace port s_axis_tx -pg 1 -lvl 8 -x 1980 -y 210 -defaultsOSRD
preplace portBus cfg_completer_id -pg 1 -lvl 0 -x 0 -y 20 -defaultsOSRD
preplace portBus cfg_interrupt_di -pg 1 -lvl 8 -x 1980 -y 20 -defaultsOSRD
preplace inst tlp_demuxer_0 -pg 1 -lvl 2 -x 400 -y 300 -defaultsOSRD
preplace inst tlp_reg_0 -pg 1 -lvl 3 -x 710 -y 230 -defaultsOSRD
preplace inst tlp_muxer_0 -pg 1 -lvl 6 -x 1620 -y 210 -defaultsOSRD
preplace inst axi_interconnect_reg -pg 1 -lvl 4 -x 1010 -y 90 -defaultsOSRD
preplace inst zzlab_env_ctrl_0 -pg 1 -lvl 5 -x 1340 -y 430 -defaultsOSRD
preplace inst tlp_dma_wr_0 -pg 1 -lvl 5 -x 1340 -y 200 -defaultsOSRD
preplace inst axis_register_slice_rx -pg 1 -lvl 1 -x 130 -y 300 -defaultsOSRD
preplace inst tlp_dma_rd_0 -pg 1 -lvl 5 -x 1340 -y 320 -defaultsOSRD
preplace inst axis_register_slice_tx -pg 1 -lvl 7 -x 1850 -y 210 -defaultsOSRD
preplace inst pcie_intr -pg 1 -lvl 5 -x 1340 -y 80 -defaultsOSRD
preplace inst system_ila_0 -pg 1 -lvl 7 -x 1850 -y 310 -defaultsOSRD
preplace netloc axi_interconnect_reg_M00_AXI 1 4 1 1170 60n
preplace netloc axis_register_slice_0_M_AXIS 1 1 1 NJ 300
preplace netloc axis_register_slice_tx_M_AXIS 1 7 1 NJ 210
preplace netloc m_axis_rx_0_1 1 0 1 NJ 300
preplace netloc tlp_muxer_0_m_axis 1 6 1 NJ 210
preplace netloc tlp_reg_0_s_axi_ctrl 1 3 1 860 90n
preplace netloc tlp_reg_0_s_axis_cc 1 3 3 870J 180 1180J 130 1490
preplace netloc tlp_dma_wr_0_s_axis_rr_desc 1 5 1 N 190
preplace netloc tlp_dma_wr_0_s_axis_rr 1 5 1 N 210
preplace netloc tlp_dma_rd_0_s_axis_rr_desc 1 5 1 1490 230n
preplace netloc tlp_dma_rd_0_s_axis_rr 1 5 1 1500 250n
preplace netloc tlp_demuxer_0_m_axis_cq 1 2 1 570 230n
preplace netloc axi_interconnect_reg_M01_AXI 1 4 1 NJ 80
preplace netloc axi_interconnect_reg_M02_AXI 1 4 1 1190 100n
preplace netloc tlp_demuxer_0_m00_axis_rc_desc 1 2 3 560J 160 850J 190 1150
preplace netloc tlp_demuxer_0_m01_axis_rc 1 2 3 NJ 300 NJ 300 N
preplace netloc tlp_demuxer_0_m01_axis_rc_desc 1 2 3 NJ 320 NJ 320 N
preplace netloc axi_interconnect_reg_M03_AXI 1 4 1 1160 120n
levelinfo -pg 1 0 130 400 710 1010 1340 1620 1850 1980
pagesize -pg 1 -db -bbox -sgen -210 0 2170 490
",
   "Interfaces View_ScaleFactor":"0.684677",
   "Interfaces View_TopLeft":"-203,-117",
   "guistr":"# # String gsaved with Nlview 7.8.0 2024-04-26 e1825d835c VDI=44 GEI=38 GUI=JA:21.0 TLS
#  -string -flagsOSRD
preplace port m_axis_rx -pg 1 -lvl 0 -x 0 -y 640 -defaultsOSRD
preplace port s_axis_tx -pg 1 -lvl 10 -x 3320 -y 670 -defaultsOSRD
preplace port port-id_user_reset -pg 1 -lvl 0 -x 0 -y 520 -defaultsOSRD
preplace port port-id_cfg_to_turnoff -pg 1 -lvl 0 -x 0 -y 1120 -defaultsOSRD
preplace port port-id_user_clk -pg 1 -lvl 0 -x 0 -y 470 -defaultsOSRD
preplace port port-id_user_lnk_up -pg 1 -lvl 0 -x 0 -y 20 -defaultsOSRD
preplace port port-id_cfg_turnoff_ok -pg 1 -lvl 10 -x 3320 -y 1100 -defaultsOSRD
preplace port port-id_cfg_interrupt_rdy -pg 1 -lvl 0 -x 0 -y 410 -defaultsOSRD
preplace port port-id_cfg_interrupt -pg 1 -lvl 10 -x 3320 -y 210 -defaultsOSRD
preplace portBus cfg_completer_id -pg 1 -lvl 0 -x 0 -y 440 -defaultsOSRD
preplace portBus cfg_interrupt_di -pg 1 -lvl 10 -x 3320 -y 240 -defaultsOSRD
preplace inst tlp_reg_0 -pg 1 -lvl 4 -x 1370 -y 730 -defaultsOSRD
preplace inst axi_interconnect_reg -pg 1 -lvl 5 -x 1720 -y 200 -defaultsOSRD
preplace inst proc_sys_reset -pg 1 -lvl 1 -x 220 -y 540 -defaultsOSRD
preplace inst zzlab_env_ctrl_0 -pg 1 -lvl 6 -x 2120 -y 260 -defaultsOSRD
preplace inst intr_map -pg 1 -lvl 7 -x 2470 -y 440 -defaultsOSRD
preplace inst const_intr_0 -pg 1 -lvl 6 -x 2120 -y 800 -defaultsOSRD
preplace inst ap_rst_n -pg 1 -lvl 5 -x 1720 -y 490 -defaultsOSRD
preplace inst tlp_dma_wr_0 -pg 1 -lvl 6 -x 2120 -y 460 -defaultsOSRD
preplace inst axis_register_slice_rx -pg 1 -lvl 2 -x 550 -y 630 -defaultsOSRD
preplace inst tlp_dma_rd_0 -pg 1 -lvl 6 -x 2120 -y 640 -defaultsOSRD
preplace inst axis_register_slice_tx -pg 1 -lvl 8 -x 2780 -y 670 -defaultsOSRD
preplace inst pcie_turnoff_0 -pg 1 -lvl 9 -x 3130 -y 1100 -defaultsOSRD
preplace inst pcie_intr -pg 1 -lvl 8 -x 2780 -y 220 -defaultsOSRD
preplace inst system_ila_0 -pg 1 -lvl 9 -x 3130 -y 940 -defaultsOSRD
preplace inst tready_not -pg 1 -lvl 4 -x 1370 -y 880 -defaultsOSRD
preplace inst tlp_demuxer_0 -pg 1 -lvl 3 -x 900 -y 660 -defaultsOSRD
preplace inst tlp_muxer_0 -pg 1 -lvl 7 -x 2470 -y 650 -defaultsOSRD
preplace inst vsrc_0 -pg 1 -lvl 6 -x 2120 -y 110 -defaultsOSRD
preplace netloc ap_rst_n_Dout2 1 5 1 1870 130n
preplace netloc cfg_completer_id_1 1 0 6 NJ 440 NJ 440 670 510 1160 570 NJ 570 1950
preplace netloc cfg_interrupt_rdy_1 1 0 8 NJ 410 NJ 410 NJ 410 NJ 410 NJ 410 1900J 360 2300J 350 2600J
preplace netloc cfg_to_turnoff_1 1 0 9 NJ 1120 NJ 1120 NJ 1120 NJ 1120 NJ 1120 NJ 1120 NJ 1120 NJ 1120 NJ
preplace netloc const_intr_0_dout 1 6 1 2320 450n
preplace netloc intr_map_dout 1 7 1 2590 240n
preplace netloc pcie_intr_0_cfg_interrupt 1 8 2 NJ 210 NJ
preplace netloc pcie_intr_0_cfg_interrupt_di 1 8 2 2980J 240 NJ
preplace netloc pcie_turnoff_0_cfg_turnoff_ok 1 9 1 NJ 1100
preplace netloc proc_sys_reset_1_interconnect_aresetn 1 1 4 390J 540 650J 480 1200J 620 1570
preplace netloc proc_sys_reset_1_peripheral_aresetn 1 1 8 430 710 680 500 1170 640 NJ 640 1930 860 2340 530 2610 770 2950
preplace netloc rst_n_1 1 5 1 1860 490n
preplace netloc rst_pins_Dout 1 5 1 1880 470n
preplace netloc tlp_dma_ctrl_0_interrupt 1 6 1 2290 410n
preplace netloc tlp_dma_rd_0_interrupt 1 6 1 2300 430n
preplace netloc tready_not_dout 1 3 2 1110 820 1540
preplace netloc user_clk_0_1 1 0 9 50 430 440 550 690 490 1190 630 1560 580 1920 740 2360 760 2580 760 2960
preplace netloc user_reset_0_1 1 0 1 NJ 520
preplace netloc zzlab_env_ctrl_0_rst 1 4 3 1580 400 1880J 350 2290
preplace netloc axi_interconnect_reg_M00_AXI 1 5 1 1950 160n
preplace netloc axi_interconnect_reg_M01_AXI 1 5 3 NJ 180 NJ 180 N
preplace netloc axi_interconnect_reg_M02_AXI 1 5 1 1940 200n
preplace netloc axi_interconnect_reg_M03_AXI 1 5 1 1890 220n
preplace netloc axi_interconnect_reg_M04_AXI 1 5 1 1860 90n
preplace netloc axis_register_slice_rx_M_AXIS 1 2 1 N 630
preplace netloc axis_register_slice_tx_M_AXIS 1 8 2 2980 670 NJ
preplace netloc m_axis_rx_0_1 1 0 9 NJ 640 450 950 NJ 950 NJ 950 NJ 950 NJ 950 NJ 950 NJ 950 2970
preplace netloc s_axis_rc_desc_1 1 3 3 1110 560 NJ 560 1940J
preplace netloc tlp_demuxer_0_m02_axis_rc_desc 1 3 3 1180 610 NJ 610 NJ
preplace netloc tlp_demuxer_1_m01_axis_rc_grp 1 3 3 N 590 NJ 590 NJ
preplace netloc tlp_demuxer_1_m_axis_cq 1 3 6 1200 940 NJ 940 NJ 940 NJ 940 NJ 940 N
preplace netloc tlp_dma_rd_0_s_axis_rr 1 6 1 N 630
preplace netloc tlp_dma_rd_0_s_axis_rr_desc 1 6 1 N 610
preplace netloc tlp_dma_wr_0_m_axis_rr 1 6 1 2310 460n
preplace netloc tlp_dma_wr_0_s_axis_rr_desc 1 6 1 2330 440n
preplace netloc tlp_muxer_0_m_axis 1 7 1 N 650
preplace netloc tlp_reg_0_m_axis_cc 1 4 3 NJ 720 1860J 870 2350
preplace netloc tlp_reg_0_s_axi_ctrl 1 4 1 1540 60n
levelinfo -pg 1 0 220 550 900 1370 1720 2120 2470 2780 3130 3320
pagesize -pg 1 -db -bbox -sgen -210 0 3520 1180
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_bd_ila()

cr_bd_bd_ila ""
set_property REGISTERED_WITH_MANAGER "1" [get_files bd_ila.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files bd_ila.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse [list bd_ila.bd]] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/pcie_7x_0_ex.gen/sources_1/bd/bd_ila/hdl/bd_ila_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse [list bd_ila.bd]] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a50tcsg325-2 -flow {Vivado Synthesis 2024} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2024" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "incremental_checkpoint" -value "$proj_dir/${_xil_proj_name_}.srcs/utils_1/imports/synth_1/xilinx_pcie_2_1_ep_7x.dcp" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a50tcsg325-2 -flow {Vivado Implementation 2024} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2024" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7a50tcsg325-2" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.bin_file" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
